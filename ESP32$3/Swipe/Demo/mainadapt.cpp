//#include "Wireless.h"
#include "Gyro_QMI8658.h"
#include "RTC_PCF85063.h"
#include "SD_Card.h"
#include "LVGL_Driver.h"
#include "BAT_Driver.h"
#include "ui.h"  // <-- generated by SquareLine

// Accelerometer values updated by driver task
float x = 0, y = 0, z = 0;

// ------------------ Driver Loop Task ------------------
void Driver_Loop(void *parameter)
{
    while(1)
    {
        QMI8658_Loop();  // Updates x, y, z internally
        RTC_Loop();
        BAT_Get_Volts();
        vTaskDelay(pdMS_TO_TICKS(100));
    }
}

// ------------------ Driver Init ------------------
void Driver_Init()
{
    Flash_test();
    BAT_Init();
    I2C_Init();
    TCA9554PWR_Init(0x00);
    Set_EXIO(EXIO_PIN8, Low);
    PCF85063_Init();
    QMI8658_Init();

    xTaskCreatePinnedToCore(
        Driver_Loop,
        "Other Driver task",
        4096,
        NULL,
        3,
        NULL,
        0
    );
}

// ------------------ LVGL G-Force Loop ------------------
void Lvgl_GForce_Loop()
{
    // Map G-force to screen coordinates (center 240,240)
    float xpos = 240 + ((x / 9.81) * 150);
    float ypos = 240 + ((y / 9.81) * 150);

    // ---------------- Main Dot ----------------
    lv_obj_set_pos(dot, (int)xpos, (int)ypos);  // dot = main G-force indicator

    // ---------------- Numeric Labels ----------------
    lv_label_set_text_fmt(ui_labelAccel, "Accel: %d", (int)max(y/9.81*10,0));
    lv_label_set_text_fmt(ui_labelBrake, "Brake: %d", (int)abs(min(y/9.81*10,0)));
    lv_label_set_text_fmt(ui_labelLeft, "Left: %d", (int)abs(min(x/9.81*10,0)));
    lv_label_set_text_fmt(ui_labelRight, "Right: %d", (int)max(x/9.81*10,0));
}

// ------------------ Setup ------------------
void setup()
{
    Wireless_Test2();
    Driver_Init();
    LCD_Init();   // If LCD reinitialized, SD must follow
    SD_Init();
    Lvgl_Init();

    ui_init();  // <-- Initialize SquareLine UI
}

// ------------------ Main Loop ------------------
void loop()
{
    Lvgl_GForce_Loop();  // Update dot and numeric labels
    Lvgl_Loop();          // LVGL handler
    vTaskDelay(pdMS_TO_TICKS(5));
}
